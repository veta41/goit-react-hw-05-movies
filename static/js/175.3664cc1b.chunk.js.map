{"version":3,"file":"static/js/175.3664cc1b.chunk.js","mappings":"uNAEaA,EAAOC,EAAAA,GAAAA,GAAH,uIAQJC,EAAQD,EAAAA,GAAAA,EAAH,qGCRLC,EAAQD,EAAAA,GAAAA,GAAH,qQ,SCCX,SAASE,EAAT,GAA2B,IAATC,EAAQ,EAARA,KACvB,OAAO,SAAC,EAAD,UAAQA,GAChB,CCCM,IAAMC,EAAa,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,iCACE,SAACL,EAAD,CAAQC,KAAK,oBACb,SAACJ,EAAD,UACGM,EAAWG,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAClC,OACE,eAAaC,MAAO,CAAEC,MAAO,KAA7B,UACE,UAAC,KAAD,CACEC,GAAE,0CAAqCL,GACvCM,MAAO,CAAEC,KAAMX,GAFjB,WAIE,gBACEY,IACEN,EAAW,yCAC2BA,GAD3B,qEAIbO,IAAKV,GAAgBE,EACrBG,MAAM,SAER,SAACb,EAAD,UAAQQ,GAAgBE,QAdnBD,EAkBZ,QAIR,C,wHCjCKU,EAAepB,EAAAA,GAAAA,IAAH,iUAgBZqB,EAAarB,EAAAA,GAAAA,KAAH,8KAUVsB,EAAYtB,EAAAA,GAAAA,OAAH,siBAmBTuB,EAAcvB,EAAAA,GAAAA,MAAH,6MAWXwB,EAAcxB,EAAAA,GAAAA,MAAH,2P,sCC5CF,SAASyB,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4CF,EAAAA,EAAAA,UAAS,IAArD,eAAOG,EAAP,KAAuBC,EAAvB,MAKAC,EAAAA,EAAAA,YAAU,WACHP,EAAaQ,IAAI,WAGtBC,EAAAA,EAAAA,IAAgBT,EAAaQ,IAAI,UAAUE,MAAK,SAAAC,GAC9CL,EAAkBK,EAAKC,QACxB,GACF,GAAE,CAACZ,EAAcG,IAWlB,OACE,iCACE,SAACV,EAAD,WACE,UAACC,EAAD,CAAYmB,SAZI,SAAAC,GACpBA,EAAEC,iBAEGZ,EAAMa,QAGXf,EAAgB,CAAEE,MAAOA,GAC1B,EAKK,WACE,SAACR,EAAD,CAAWsB,KAAK,SAAhB,UACE,SAACrB,EAAD,wBAGF,SAACC,EAAD,CACEoB,KAAK,OACLjC,KAAK,QACLkC,MAAOf,EACPgB,aAAa,MACbC,SAlCW,SAAAN,GACnBV,EAASU,EAAEO,OAAOH,MACnB,EAiCSI,WAAS,EACTC,YAAY,sBAIH,OAAdlB,QAAc,IAAdA,GAAAA,EAAgBmB,QACf,SAAC/C,EAAA,EAAD,CAAYC,WAAY2B,KAExB,0BAIP,C","sources":["components/MoviesList/MoviesList.styled.js","components/Header/Header.styled.js","components/Header/Header.js","components/MoviesList/MoviesList.js","pages/Searchbar/Searchbar.styled.js","pages/Searchbar/Searchbar.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Title = styled.p`\n  display: flex;\n  padding: 5px;\n  color: #000000;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  width: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px;\n  margin-top: 0;\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 10px;\n  text-align: center;\n`;\n","import propTypes from 'prop-types';\nimport { Title } from './Header.styled';\n\nexport function Header({ text }) {\n  return <Title>{text}</Title>;\n}\n\nHeader.propTypes = {\n  text: propTypes.string.isRequired,\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport { List, Title } from './MoviesList.styled';\nimport { PropTypes } from 'prop-types';\nimport { Header } from 'components/Header/Header';\n\n//---------------------------------------------------//\nexport const MoviesList = ({ moviesList }) => {\n  const location = useLocation();\n  return (\n    <>\n      <Header text=\"TRENDING TODAY\" />\n      <List>\n        {moviesList.map(({ title, id, name, poster_path }) => {\n          return (\n            <li key={id} style={{ width: 200 }}>\n              <Link\n                to={`/goit-react-hw-05-movies/movies/${id}`}\n                state={{ from: location }}\n              >\n                <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                      : `https://i.gifer.com/origin/3f/3fcf565ccc553afcfd89858c97304705.gif`\n                  }\n                  alt={title ? title : name}\n                  width=\"200\"\n                />\n                <Title>{title ? title : name}</Title>\n              </Link>\n            </li>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  moviesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n//---------------------------------------//\n\nconst SearchHeader = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: transparent;\n`;\nconst SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nconst SearchBtn = styled.button`\n  display: inline-block;\n  width: 37px;\n  height: 37px;\n  background-image: url('https://upload.wikimedia.org/wikipedia/commons/thumb/d/de/OOjs_UI_icon_search-ltr.svg/1200px-OOjs_UI_icon_search-ltr.svg.png');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n    background-color: blue;\n    border-color: white;\n    color: white;\n  }\n`;\nconst SearchLabel = styled.label`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\nconst SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  padding: 5px;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport { SearchHeader, SearchBtn, SearchForm, SearchLabel, SearchInput };\n","import { useEffect, useState } from 'react';\nimport {\n  SearchHeader,\n  SearchBtn,\n  SearchForm,\n  SearchLabel,\n  SearchInput,\n} from './Searchbar.styled';\n\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from '../../servises/Api';\n\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\n//---------------------------------------------//\n\nexport default function Searchbar() {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [query, setQuery] = useState('');\n  const [searchFilmList, setSearchFilmList] = useState([]);\n\n  const handlerInput = e => {\n    setQuery(e.target.value);\n  };\n  useEffect(() => {\n    if (!searchParams.get('query')) {\n      return;\n    }\n    getSearchMovies(searchParams.get('query')).then(data => {\n      setSearchFilmList(data.results);\n    });\n  }, [searchParams, query]);\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n\n    if (!query.trim()) {\n      return;\n    }\n    setSearchParams({ query: query });\n  };\n\n  return (\n    <>\n      <SearchHeader>\n        <SearchForm onSubmit={handlerSubmit}>\n          <SearchBtn type=\"submit\">\n            <SearchLabel>Search</SearchLabel>\n          </SearchBtn>\n\n          <SearchInput\n            type=\"text\"\n            name=\"query\"\n            value={query}\n            autoComplete=\"off\"\n            onChange={handlerInput}\n            autoFocus\n            placeholder=\"Search movie\"\n          />\n        </SearchForm>\n      </SearchHeader>\n      {searchFilmList?.length ? (\n        <MoviesList moviesList={searchFilmList} />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n"],"names":["List","styled","Title","Header","text","MoviesList","moviesList","location","useLocation","map","title","id","name","poster_path","style","width","to","state","from","src","alt","SearchHeader","SearchForm","SearchBtn","SearchLabel","SearchInput","Searchbar","useSearchParams","searchParams","setSearchParams","useState","query","setQuery","searchFilmList","setSearchFilmList","useEffect","get","getSearchMovies","then","data","results","onSubmit","e","preventDefault","trim","type","value","autoComplete","onChange","target","autoFocus","placeholder","length"],"sourceRoot":""}