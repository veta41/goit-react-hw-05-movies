{"version":3,"file":"static/js/227.d67c5ca5.chunk.js","mappings":"sLAEaA,E,QAAQC,GAAAA,GAAH,gQ,SCCX,SAASC,EAAT,GAA2B,IAATC,EAAQ,EAARA,KACvB,OAAO,SAACH,EAAD,UAAQG,GAChB,C,yJCFYC,GAAMH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,yT,SCCD,SAASK,IAAc,IAAD,IAC7BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACJ,EAAD,CAAKK,KAAK,SAASC,GAAE,iBAAEH,QAAF,IAAEA,GAAF,UAAEA,EAAUI,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAAhD,oBAIH,CCTM,I,UAAMC,EAAOZ,EAAAA,GAAAA,IAAH,wDAKJa,EAAOb,EAAAA,GAAAA,IAAH,0CAIJc,EAAMd,EAAAA,GAAAA,IAAH,sRAeHe,EAAUf,EAAAA,GAAAA,GAAH,mEAKPgB,EAAUhB,EAAAA,GAAAA,GAAH,yFAMPiB,EAAcjB,EAAAA,GAAAA,EAAH,oFC3BXkB,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAExBC,EAOED,EAPFC,YACAC,EAMEF,EANFE,MACAC,EAKEH,EALFG,KACAC,EAIEJ,EAJFI,aACAC,EAGEL,EAHFK,aACAC,EAEEN,EAFFM,SACAC,EACEP,EADFO,OAEF,OACE,UAACd,EAAD,YACE,0BACE,SAACE,EAAD,CACEa,IACEP,EAAW,yCAC2BA,GAD3B,8BAIbQ,IAAKP,GAAgBC,OAGzB,UAACT,EAAD,YACE,UAACE,EAAD,WACGM,GAAgBC,EADnB,KAC2BC,EAAaM,MAAM,EAAG,GADjD,QAGA,UAACZ,EAAD,yBACca,KAAKC,MAAOP,EAAe,GAAM,KAD/C,QAGA,SAACR,EAAD,wBACA,SAACC,EAAD,UAAcQ,KACd,SAACT,EAAD,sBACA,SAACC,EAAD,UAAcS,EAAOM,KAAI,SAAAC,GAAI,OAAIA,EAAKX,IAAT,IAAeY,KAAK,aAIxD,E,UC3CYC,GAAYnC,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,uTAwBToC,GARUpC,EAAAA,GAAAA,GAAH,2CAIGA,EAAAA,GAAAA,GAAH,2CAIYA,EAAAA,GAAAA,GAAH,wLAShBqC,EAAmBrC,EAAAA,GAAAA,IAAH,wDCpBd,SAASsC,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOpB,EAAP,KAAcqB,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFnC,GAAWC,EAAAA,EAAAA,MAQjB,OANAoC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAC5BN,EAASM,EACV,GACF,GAAE,CAACL,KAGF,iCACE,SAACpC,EAAD,IACCc,IAAS,SAACD,EAAD,CAAWC,MAAOA,KAE5B,UAACiB,EAAD,YACE,SAACnC,EAAA,EAAD,CAAQC,KAAK,4BACb,UAACmC,EAAD,YACE,yBACE,SAACF,EAAD,CAAWzB,MAAOJ,EAASI,MAAOD,GAAG,OAArC,qBAIF,yBACE,SAAC0B,EAAD,CAAWzB,MAAOJ,EAASI,MAAOD,GAAG,UAArC,6BAMN,SAAC,KAAD,MAGL,C","sources":["components/Header/Header.styled.js","components/Header/Header.js","components/BackButton/Button.styled.js","components/BackButton/BackButton.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js","pages/MoviesDetails/MoviesDetails.styled.js","pages/MoviesDetails/MoviesDetails.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  width: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px;\n  margin-top: 0;\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  color: #7bd4eb;\n  text-align: center;\n`;\n","import propTypes from 'prop-types';\nimport { Title } from './Header.styled';\n\nexport function Header({ text }) {\n  return <Title>{text}</Title>;\n}\n\nHeader.propTypes = {\n  text: propTypes.string.isRequired,\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Btn = styled(NavLink)`\n  display: inline-block;\n  text-decoration: none;\n  color: #7bd4eb;\n  font-size: 25px;\n  font-weight: 200;\n  margin: 20px;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px 1px #7bd4eb;\n\n  &.active {\n    color: #eb8015;\n    box-shadow: 0 0 13px 3px #eb8015;\n  }\n`;\n","// import propTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Btn } from './Button.styled';\n\nexport default function BackButton() {\n  const location = useLocation();\n  return (\n    <Btn type=\"button\" to={location?.state?.from ?? '/'}>\n      Go Back\n    </Btn>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Desc = styled.div`\n  padding: 20px;\n`;\n\nexport const Img = styled.img`\n  width: 300px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px 1px #7bd4eb;\n  cursor: pointer;\n  transform: scale(0.9);\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1);\n    box-shadow: 0 0 10px 1px #eb8015;\n  }\n`;\n\nexport const MovieH2 = styled.h2`\n  color: #7bd4eb;\n  padding-bottom: 5px;\n`;\n\nexport const MovieH3 = styled.h3`\n  color: #7bd4eb;\n  padding-bottom: 5px;\n  padding-top: 20px;\n`;\n\nexport const MovieDetail = styled.p`\n  color: #191b1f;\n  font-size: 20px;\n  font-weight: 400;\n`;\n","import {\n  Card,\n  Desc,\n  Img,\n  MovieDetail,\n  MovieH2,\n  MovieH3,\n} from './MovieCard.styled';\nimport { PropTypes } from 'prop-types';\n\nexport const MovieCard = ({ movie }) => {\n  const {\n    poster_path,\n    title,\n    name,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movie;\n  return (\n    <Card>\n      <div>\n        <Img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : `https://i.gifer.com/5h4.gif`\n          }\n          alt={title ? title : name}\n        />\n      </div>\n      <Desc>\n        <MovieH2>\n          {title ? title : name} ({release_date.slice(0, 4)})\n        </MovieH2>\n        <MovieDetail>\n          Use Score: {Math.round((vote_average / 10) * 100)}%\n        </MovieDetail>\n        <MovieH3>Overwiew</MovieH3>\n        <MovieDetail>{overview}</MovieDetail>\n        <MovieH3>Genres</MovieH3>\n        <MovieDetail>{genres.map(item => item.name).join(' ,')}</MovieDetail>\n      </Desc>\n    </Card>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.array.isRequired,\n  }),\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieLink = styled(NavLink)`\n  display: inline-block;\n  text-decoration: none;\n  color: #7bd4eb;\n  font-size: 25px;\n  font-weight: 500;\n  margin: 10px;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px 1px #7bd4eb;\n  &.active {\n    color: #eb8015;\n    box-shadow: 0 0 13px 3px #eb8015;\n  }\n`;\n\nexport const MovieH2 = styled.h2`\n  color: #7bd4eb;\n`;\n\nexport const MovieH3 = styled.h3`\n  color: #7bd4eb;\n`;\n\nexport const MovieListDetails = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-content: space-between;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const MovieItemDetails = styled.div`\n  display: flex;\n  gap: 25px;\n`;\n","import { useState, useEffect } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\n// import { Header } from '../../components/Header/Header';\n\nimport { getMovieDetails } from '../../servises/Api';\n\nimport BackButton from 'components/BackButton/BackButton';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { Header } from 'components/Header/Header';\nimport {\n  MovieItemDetails,\n  MovieLink,\n  MovieListDetails,\n} from './MoviesDetails.styled';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(data => {\n      setMovie(data);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      <BackButton />\n      {movie && <MovieCard movie={movie} />}\n\n      <MovieListDetails>\n        <Header text=\"Additional information\" />\n        <MovieItemDetails>\n          <li>\n            <MovieLink state={location.state} to=\"cast\">\n              Cast\n            </MovieLink>\n          </li>\n          <li>\n            <MovieLink state={location.state} to=\"reviews\">\n              Review\n            </MovieLink>\n          </li>\n        </MovieItemDetails>\n      </MovieListDetails>\n      <Outlet />\n    </>\n  );\n}\n"],"names":["Title","styled","Header","text","Btn","NavLink","BackButton","location","useLocation","type","to","state","from","Card","Desc","Img","MovieH2","MovieH3","MovieDetail","MovieCard","movie","poster_path","title","name","release_date","vote_average","overview","genres","src","alt","slice","Math","round","map","item","join","MovieLink","MovieListDetails","MovieItemDetails","MovieDetails","useState","setMovie","movieId","useParams","useEffect","getMovieDetails","then","data"],"sourceRoot":""}